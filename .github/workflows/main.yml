name: Omoidasu API

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Build and Generate the Boot Jar
        run: |
          chmod +x gradlew
          ./gradlew test
          ./gradlew bootJar
      - name: Set version environment variable
        run: |
          echo "VERSION=$(ls build/libs/ | grep -v 'plain' | sed 's/^.\{13\}\(.*\).\{4\}$/\1/')" >> $GITHUB_ENV
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      - name: Create workspace on remote server
        run: |
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "\
          if [ ! -d "~/omoidasu-api" ]; then
            mkdir -p ~/omoidasu-api; \
          fi; \
          if [ ! -d "~/omoidasu-api/build/libs" ]; then
            mkdir -p ~/omoidasu-api/build/libs; \
          fi; \
          "
      - name: Copy the docker compose related files to remote server
        run: |
          scp -rp fetch-dictionaries.sh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/omoidasu-api/fetch-dictionaries.sh
          scp -rp docker-compose.yaml ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/omoidasu-api/docker-compose.yaml
          scp -rp Dockerfile ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/omoidasu-api/Dockerfile
          scp -rp build/libs/omoidasu-api-${{ env.VERSION }}.jar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/omoidasu-api/build/libs/omoidasu-api-${{ env.VERSION }}.jar
      - name: Fetch the Dictionary
        run: |
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "\
            cd ~/omoidasu-api; \
            chmod +x fetch-dictionaries.sh && . fetch-dictionaries.sh; \
          "
      - name: Up the docker-compose
        run: |
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "\
            export DB_USERNAME=${{ secrets.DB_USERNAME }}; \
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}; \
            export DB_NAME=${{ secrets.DB_NAME }}; \
            export DB_URL=${{ secrets.DB_URL }}; \
            export VERSION=${{ env.VERSION }}; \
            cd ~/omoidasu-api; \
            docker-compose build; \
            docker-compose down; \
            docker-compose up -d; \
          "
