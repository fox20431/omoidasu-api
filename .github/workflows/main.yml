name: Omoidasu API

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    needs: [pre]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Fetch the Dictionary
        run: |
          chmod +x fetch-dictionaries.sh
          . fetch-dictionaries.sh
      - name: Cache Dictionary File
        uses: actions/cache@v3
        with:
          path: src/main/resources/dicts
          key: ${{ runner.os }}-dictionary-${{ hashFiles('dictionary') }}
          restore-keys: |
            ${{ runner.os }}-dictionary-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build and Generate the Boot Jar
        run: |
          chmod +x gradlew
          ./gradlew build
          ./gradlew bootJar
      - name: Cache Project Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.m2/repository
          key: ${{ runner.os }}-deps-${{ hashFiles('dictionary') }}
          restore-keys: |
            ${{ runner.os }}-deps-
      - name: Set version environment variable
        run: |
          echo "VERSION=$(ls build/libs/ | grep -v 'plain' | sed 's/^.\{13\}\(.*\).\{4\}$/\1/')" >> $GITHUB_ENV
      - name: Build the Docker image
        run: docker build --build-arg VERSION=${{ env.VERSION }} --file Dockerfile --tag fox20431/omoidasu-api:${{ env.VERSION }} .
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: |
            ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Create workspace on remote server
        run: |
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "\
            rm -rf ~/omoidasu-api; \
            mkdir -p ~/omoidasu-api"
      - name: Save Docker image as tar file
        run: |
          docker save fox20431/omoidasu-api:${{ env.VERSION }} > omoidasu-api-${{ env.VERSION }}-image.tar
      - name: Copy tar file to remote server
        run: |
          scp -i ${{ secrets.SSH_PRIVATE_KEY }} -rp omoidasu-api-image.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/omoidasu-api-image.tar
      - name: Load Docker image from tar file
        run: |
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "docker load -i ~/omoidasu-api-image.tar"
      - name: Copy the docker file to remote server
        run: |
          scp -i ${{ secrets.SSH_PRIVATE_KEY }} -rp docker-compose.yaml ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/omoidasu-api/docker-compose.yaml
      - name: Up the docker-compose
        run: |
          export DB_USERNAME=${{ secrets.DB_USERNAME }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          export VERSION=${{ env.VERSION }}
          ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "\
            cd ~/omoidasu-api; \
            docker-compose up -d"
